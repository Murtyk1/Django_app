services:
  db:
    image: postgres:15-alpine3.20
    container_name: postgres_aviasales
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U django_user" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:    
    build: .
    env_file:
      - .env      
    command: >
      sh -c "
      python manage.py migrate &&
      python create_user.py  &&
      python manage.py collectstatic --noinput &&
      gunicorn --bind 0.0.0.0:8000 flight_prices.wsgi:application"
    container_name: aviasales      
    environment:
      POSTGRES_HOST: ${DB_HOST}
      POSTGRES_PORT: ${DB_PORT}
    ports:
      - "8001:8000"
    volumes:
      - .:/app
      - static_volume:/app/static  
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:1.25-alpine
    ports:
      - "8080:80"  
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/static
    depends_on:
      - app
volumes:
  postgres_data:
  static_volume: 
